{"version":3,"sources":["subtotal.coffee"],"names":["hasProp","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","callWithJQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","tpl","sTpl","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","key","len","ref","length","push","join","String","fromCharCode","slice","pivotUtilities","PivotData","[object Object]","input","opts","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","this","allTotal","rowTotals","rowKeys","rowAttrs","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotData","addClass","adjustAxisHeader","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","collapseAxis","collapseAxisHeaders","collapseChildCol","collapseChildRow","collapseCol","collapseHiddenColSubtotal","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getHeaderText","getTableEventHandlers","hasClass","hideChildCol","hideChildRow","processKeys","removeClass","replaceClass","showChildCol","showChildRow","table","clickCallback","localeStrings","subtotalOf","rowSubtotalDisplay","displayOnTop","disableFrom","collapseAt","hideOnExpand","disableExpandCollapse","colSubtotalDisplay","extend","disableSubtotal","disableAfter","collapseRowsAt","collapseColsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","elementType","textContent","attributes","eventHandlers","e","event","handler","val","document","setAttribute","addEventListener","a","v","keysArr","headers","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","parent","th","childrenSpan","axisHeaders","ah","arrow","hClass","expandedCount","expandables","attrHeaders","clickStatus","onClick","title","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","h","chKey","counter","colSpan","rowSpan","sTh","tbody","firstChild","insertBefore","sTr","value","filters","colAttrHeaders","rowAttrHeaders","ch","cls","len1","rCls","rh","td","totalAggregator","format","data-value","data-rownode","data-colnode","data-row","data-rowcol","clsNames","data-for","collapsible","Math","min","closest","find","p","cell","querySelectorAll","ref2","colAxisHeaders","colKeyHeaders","result","rowAxisHeaders","rowKeyHeaders","style","display","main","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","data","selector","inner","numInputs","subtotal_aggregators","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\n        constructor: (input, opts) ->\n            super input, opts\n\n        processKey = (record, totals, keys, attrs, getAggregator) ->\n            key = []\n            addKey = false\n            for attr in attrs\n                key.push record[attr] ? \"null\"\n                flatKey = key.join String.fromCharCode(0)\n                if not totals[flatKey]\n                    totals[flatKey] = getAggregator key.slice()\n                    addKey = true\n                totals[flatKey].push record\n            keys.push key if addKey\n            return key\n\n        processRecord: (record) -> #this code is called in a tight loop\n            rowKey = []\n            colKey = []\n\n            @allTotal.push record\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\n                return @aggregator this, key, []\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\n                return @aggregator this, [], key\n            m = rowKey.length-1\n            n = colKey.length-1\n            return if m < 0 or n < 0\n            for i in [0..m]\n                fRowKey = rowKey.slice(0, i+1)\n                flatRowKey = fRowKey.join String.fromCharCode(0)\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\n                for j in [0..n]\n                    fColKey = colKey.slice 0, j+1\n                    flatColKey = fColKey.join String.fromCharCode(0)\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\n                    @tree[flatRowKey][flatColKey].push record\n\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\n\n    SubtotalRenderer = (pivotData, opts) ->\n        defaults =\n            table: clickCallback: null\n            localeStrings: totals: \"Totals\", subtotalOf: \"Subtotal of\"\n            arrowCollapsed: \"\\u25B6\"\n            arrowExpanded: \"\\u25E2\"\n            rowSubtotalDisplay:\n                displayOnTop: true\n                disableFrom: 99999\n                collapseAt: 99999\n                hideOnExpand: false\n                disableExpandCollapse: false\n            colSubtotalDisplay:\n                displayOnTop: true\n                disableFrom: 99999\n                collapseAt: 99999\n                hideOnExpand: false\n                disableExpandCollapse: false\n        opts = $.extend true, {}, defaults, opts\n\n        opts.rowSubtotalDisplay.disableFrom = 0 if opts.rowSubtotalDisplay.disableSubtotal\n        opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1 if typeof  opts.rowSubtotalDisplay.disableAfter isnt 'undefined' and opts.rowSubtotalDisplay.disableAfter isnt null\n        opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt if typeof opts.rowSubtotalDisplay.collapseAt isnt 'undefined' and opts.collapseRowsAt isnt null\n\n        opts.colSubtotalDisplay.disableFrom = 0 if opts.colSubtotalDisplay.disableSubtotal\n        opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1 if typeof  opts.colSubtotalDisplay.disableAfter isnt 'undefined' and opts.colSubtotalDisplay.disableAfter isnt null\n        opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt if typeof opts.colSubtotalDisplay.collapseAt isnt 'undefined' and opts.collapseColsAt isnt null\n\n        colAttrs = pivotData.colAttrs\n        rowAttrs = pivotData.rowAttrs\n        rowKeys = pivotData.getRowKeys()\n        colKeys = pivotData.getColKeys()\n        tree = pivotData.tree\n        rowTotals = pivotData.rowTotals\n        colTotals = pivotData.colTotals\n        allTotal = pivotData.allTotal\n\n        classRowHide = \"rowhide\"\n        classRowShow = \"rowshow\"\n        classColHide = \"colhide\"\n        classColShow = \"colshow\"\n        clickStatusExpanded = \"expanded\"\n        clickStatusCollapsed = \"collapsed\"\n        classExpanded = \"expanded\"\n        classCollapsed = \"collapsed\"\n        classRowExpanded = \"rowexpanded\"\n        classRowCollapsed = \"rowcollapsed\"\n        classColExpanded = \"colexpanded\"\n        classColCollapsed = \"colcollapsed\"\n        arrowExpanded = opts.arrowExpanded\n        arrowCollapsed = opts.arrowCollapsed\n\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\n        hasClass = (element, className) ->\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\n            element.className.match(regExp) isnt null\n\n        removeClass = (element, className) ->\n            for name in className.split \" \"\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\n                element.className = element.className.replace regExp, ''\n\n        addClass = (element, className) ->\n            for name in className.split \" \"\n                element.className += (\" \" + name) if not hasClass element, name\n\n        replaceClass = (element, replaceClassName, byClassName) ->\n            removeClass element, replaceClassName\n            addClass element, byClassName\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\n\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\n            e = document.createElement elementType\n            e.className = className if className?\n            e.textContent = textContent if textContent?\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\n            return e\n\n        setAttributes = (e, attrs) ->\n            e.setAttribute a, v for own a, v of attrs\n\n        processKeys = (keysArr, className, opts) ->\n            lastIdx = keysArr[0].length-1\n            headers = children: []\n            row = 0\n            keysArr.reduce(\n                (val0, k0) =>\n                    col = 0\n                    k0.reduce(\n                        (acc, curVal, curIdx, arr) =>\n                            if not acc[curVal]\n                                key = k0.slice 0, col+1\n                                acc[curVal] =\n                                    row: row\n                                    col: col\n                                    descendants: 0\n                                    children: []\n                                    text: curVal\n                                    key: key\n                                    flatKey: key.join String.fromCharCode(0)\n                                    firstLeaf: null\n                                    leaves: 0\n                                    parent: if col isnt 0 then acc else null\n                                    th: createElement \"th\", className, curVal\n                                    childrenSpan: 0\n                                acc.children.push curVal\n                            if col > 0\n                                acc.descendants++\n                            col++\n                            if curIdx == lastIdx\n                                node = headers\n                                for i in [0..lastIdx-1] when lastIdx > 0\n                                    node[k0[i]].leaves++\n                                    if not node[k0[i]].firstLeaf\n                                        node[k0[i]].firstLeaf = acc[curVal]\n                                    node = node[k0[i]]\n                                return headers\n                            return acc[curVal]\n                        headers)\n                    row++\n                    return headers\n                headers)\n            return headers\n\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\n            ah =\n                text: attrs[col]\n                expandedCount: 0\n                expandables: 0\n                attrHeaders: []\n                clickStatus: clickStatusExpanded\n                onClick: collapseAxis\n\n            arrow = \"#{arrowExpanded} \"\n            hClass = classExpanded\n            if col >= opts.collapseAt\n                arrow = \"#{arrowCollapsed} \"\n                hClass = classCollapsed\n                ah.clickStatus = clickStatusCollapsed\n                ah.onClick = expandAxis\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\n                arrow = \"\"\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\", {title: ah.text}\n            if col < attrs.length-1 and col < opts.disableFrom and not opts.disableExpandCollapse\n                ah.th.onclick = (event) ->\n                    event = event || window.event\n                    ah.onClick axisHeaders, col, attrs, opts\n            axisHeaders.ah.push ah\n            return ah\n\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\n            axisHeaders =\n                collapseAttrHeader: collapseCol\n                expandAttrHeader: expandCol\n                ah: []\n            for attr, col in colAttrs\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\n                ah.tr = createElement \"tr\"\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\n                ah.tr.appendChild ah.th\n                thead.appendChild ah.tr\n            return axisHeaders\n\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\n            axisHeaders =\n                collapseAttrHeader: collapseRow\n                expandAttrHeader: expandRow\n                ah: []\n                tr: createElement \"tr\"\n            for col in [0..rowAttrs.length-1]\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\n                axisHeaders.tr.appendChild ah.th\n            if colAttrs.length != 0\n                th = createElement \"th\"\n                axisHeaders.tr.appendChild th\n            thead.appendChild axisHeaders.tr\n            return axisHeaders\n\n        getHeaderText = (h, attrs, opts) ->\n            arrow = \" #{arrowExpanded} \"\n            arrow = \"\" if h.col == attrs.length-1 or h.col >= opts.disableFrom or opts.disableExpandCollapse or h.children.length is 0\n            return \"#{arrow}#{h.text}\"\n\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\n            # DF Recurse\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\n            # Process\n            ah = axisHeaders.ah[h.col]\n            ah.attrHeaders.push h\n\n            h.node = node.counter\n            h.onClick = collapseCol\n\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{classColExpanded}\"\n            h.th.setAttribute \"data-colnode\", h.node\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\n            h.th.textContent = getHeaderText h, colAttrs, opts.colSubtotalDisplay\n            if h.children.length isnt 0 and h.col < opts.colSubtotalDisplay.disableFrom\n                    ah.expandables++\n                    ah.expandedCount += 1\n                    h.th.colSpan++ if not opts.colSubtotalDisplay.hideOnExpand\n                    if not opts.colSubtotalDisplay.disableExpandCollapse\n                        h.th.onclick = (event) ->\n                            event = event || window.event\n                            h.onClick axisHeaders, h, opts.colSubtotalDisplay\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller #{classColShow} col#{h.row} colcol#{h.col} #{classColExpanded}\"\n                    h.sTh.setAttribute \"data-colnode\", h.node\n                    h.sTh.rowSpan = colAttrs.length-h.col\n                    replaceClass h.sTh, classColShow, classColHide if opts.colSubtotalDisplay.hideOnExpand\n                    h[h.children[0]].tr.appendChild h.sTh\n\n            h.parent?.childrenSpan += h.th.colSpan\n\n            h.clickStatus = clickStatusExpanded\n            ah.tr.appendChild h.th\n            h.tr = ah.tr\n            attrHeaders.push h\n            node.counter++\n\n\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\n            tr.appendChild th\n\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\n            # DF Recurse\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\n            # Process\n            ah = axisHeaders.ah[h.col]\n            ah.attrHeaders.push h\n\n            h.node = node.counter\n            h.onClick = collapseRow\n            firstChild = h[h.children[0]] if h.children.length isnt 0\n\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{classRowExpanded}\"\n            h.th.setAttribute \"data-rownode\", h.node\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\n            h.th.textContent = getHeaderText h, rowAttrs, opts.rowSubtotalDisplay\n\n            h.tr = createElement \"tr\", \"row#{h.row}\"\n            h.tr.appendChild h.th\n            if h.children.length is 0\n                tbody.appendChild h.tr\n            else\n                tbody.insertBefore h.tr, firstChild.tr\n\n            if h.children.length isnt 0 and h.col < opts.rowSubtotalDisplay.disableFrom\n                ++ah.expandedCount\n                ++ah.expandables\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\n                    h.th.onclick = (event) ->\n                        event = event || window.event\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\n\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{classRowExpanded} #{classRowShow}\"\n                replaceClass h.sTh, classRowShow, classRowHide if opts.rowSubtotalDisplay.hideOnExpand\n                h.sTh.setAttribute \"data-rownode\", h.node\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0\n\n                if opts.rowSubtotalDisplay.displayOnTop\n                    h.tr.appendChild h.sTh\n                else\n                    h.th.rowSpan += 1 # if not opts.rowSubtotalDisplay.hideOnExpand\n                    h.sTr = createElement \"tr\", \"row#{h.row}\"\n                    h.sTr.appendChild h.sTh\n                    tbody.appendChild h.sTr\n\n            h.th.rowSpan++ if h.children.length isnt 0\n            h.parent?.childrenSpan += h.th.rowSpan\n\n            h.clickStatus = clickStatusExpanded\n            attrHeaders.push h\n            node.counter++\n\n        getTableEventHandlers = (value, rowKey, colKey, rowAttrs, colAttrs, opts) ->\n            return if not opts.table?.eventHandlers\n            eventHandlers = {}\n            for own event, handler of opts.table.eventHandlers\n                filters = {}\n                filters[attr] = colKey[i] for own i, attr of colAttrs when colKey[i]?\n                filters[attr] = rowKey[i] for own i, attr of rowAttrs when rowKey[i]?\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\n            return eventHandlers\n\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts) ->\n            for rh in rowAttrHeaders when rh.col is rowAttrs.length-1 or (rh.children.length isnt 0 and rh.col < opts.rowSubtotalDisplay.disableFrom)\n                rCls = \"pvtVal row#{rh.row} rowcol#{rh.col} #{classRowExpanded}\"\n                if rh.children.length > 0\n                    rCls += \" pvtRowSubtotal\"\n                    rCls += if opts.rowSubtotalDisplay.hideOnExpand then \" #{classRowHide}\" else \"  #{classRowShow}\"\n                else\n                    rCls += \" #{classRowShow}\"\n                tr = if rh.sTr then rh.sTr else rh.tr\n                for ch in colAttrHeaders when ch.col is colAttrs.length-1 or (ch.children.length isnt 0 and ch.col < opts.colSubtotalDisplay.disableFrom)\n                    aggregator = tree[rh.flatKey][ch.flatKey] ? {value: (-> null), format: -> \"\"}\n                    val = aggregator.value()/1000\n                    cls = \" #{rCls} col#{ch.row} colcol#{ch.col} #{classColExpanded}\"\n                    if ch.children.length > 0\n                        cls += \" pvtColSubtotal\"\n                        cls += if opts.colSubtotalDisplay.hideOnExpand then \" #{classColHide}\" else \" #{classColShow}\"\n                    else\n                        cls += \" #{classColShow}\"\n                    td = createElement \"td\", cls, aggregator.format(val),\n                        \"data-value\": val\n                        \"data-rownode\": rh.node\n                        \"data-colnode\": ch.node,\n                        getTableEventHandlers val, rh.key, ch.key, rowAttrs, colAttrs, opts\n\n                    tr.appendChild td\n\n                # buildRowTotal\n                totalAggregator = rowTotals[rh.flatKey]\n                val = totalAggregator.value()/1000\n                td = createElement \"td\", \"pvtTotal rowTotal #{rCls}\", totalAggregator.format(val),\n                    \"data-value\": val\n                    \"data-row\": \"row#{rh.row}\"\n                    \"data-rowcol\": \"col#{rh.col}\"\n                    \"data-rownode\": rh.node,\n                    getTableEventHandlers val, rh.key, [], rowAttrs, colAttrs, opts\n                tr.appendChild td\n\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\n            tr = createElement \"tr\"\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\n            tr.appendChild th\n            return tr\n\n        buildColTotals = (tr, attrHeaders, rowAttrs, colAttrs, opts) ->\n            for h in attrHeaders when  h.col is colAttrs.length-1 or (h.children.length isnt 0 and h.col < opts.colSubtotalDisplay.disableFrom)\n                clsNames = \"pvtVal pvtTotal colTotal #{classColExpanded} col#{h.row} colcol#{h.col}\"\n                if h.children.length isnt 0\n                    clsNames += \" pvtColSubtotal\"\n                    clsNames += if opts.colSubtotalDisplay.hideOnExpand then \" #{classColHide}\" else \" #{classColShow}\"\n                else\n                    clsNames += \" #{classColShow}\"\n                totalAggregator = colTotals[h.flatKey]\n                val = totalAggregator.value()/1000\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\n                    \"data-value\": val\n                    \"data-for\": \"col#{h.col}\"\n                    \"data-colnode\": \"#{h.node}\",\n                    getTableEventHandlers val, [], h.key, rowAttrs, colAttrs, opts\n                tr.appendChild td\n\n        buildGrandTotal = (tbody, tr, rowAttrs, colAttrs, opts) ->\n            totalAggregator = allTotal\n            val = totalAggregator.value()\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\n                {\"data-value\": val},\n                getTableEventHandlers val, [], [], rowAttrs, colAttrs, opts\n            tr.appendChild td\n            tbody.appendChild tr\n\n        collapseAxisHeaders = (axisHeaders, col, opts) ->\n            collapsible = Math.min axisHeaders.ah.length-2, opts.disableFrom-1\n            return if col > collapsible\n            for i in [col..collapsible]\n                ah = axisHeaders.ah[i]\n                replaceClass ah.th, classExpanded, classCollapsed\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\n                ah.clickStatus = clickStatusCollapsed\n                ah.onClick = expandAxis\n\n        adjustAxisHeader = (axisHeaders, col, opts) ->\n            ah = axisHeaders.ah[col]\n            if ah.expandedCount is 0\n                collapseAxisHeaders axisHeaders, col, opts\n            else if ah.expandedCount is ah.expandables\n                replaceClass ah.th, classCollapsed, classExpanded\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\n                ah.clickStatus = clickStatusExpanded\n                ah.onClick = collapseAxis\n\n        hideChildCol = (ch) ->\n            $(ch.th).closest 'table.pvtTable'\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\"\n                .removeClass classColShow\n                .addClass classColHide\n\n        collapseHiddenColSubtotal = (h, opts) ->\n            $(h.th).closest 'table.pvtTable'\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\"\n                .removeClass classColExpanded\n                .addClass classColCollapsed\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.children.length isnt 0\n            h.th.colSpan = 1\n\n        collapseShowColSubtotal = (h, opts) ->\n            $(h.th).closest 'table.pvtTable'\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\"\n                .removeClass classColExpanded\n                .addClass classColCollapsed\n                .removeClass classColHide\n                .addClass classColShow\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.children.length isnt 0\n            h.th.colSpan = 1\n\n        collapseChildCol = (ch, h) ->\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\n            hideChildCol ch\n\n        collapseCol = (axisHeaders, h, opts) ->\n            colSpan = h.th.colSpan - 1\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\n            if h.col < opts.disableFrom\n                if hasClass h.th, classColHide\n                    collapseHiddenColSubtotal h, opts\n                else\n                    collapseShowColSubtotal h, opts\n            p = h.parent\n            while p\n                p.th.colSpan -= colSpan\n                p = p.parent\n            h.clickStatus = clickStatusCollapsed\n            h.onClick = expandCol\n            axisHeaders.ah[h.col].expandedCount--\n            adjustAxisHeader axisHeaders, h.col, opts\n\n        showChildCol = (ch) ->\n            $(ch.th).closest 'table.pvtTable'\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\"\n                .removeClass classColHide\n                .addClass classColShow\n\n        expandHideColSubtotal = (h) ->\n            $(h.th).closest 'table.pvtTable'\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\"\n                .removeClass \"#{classColCollapsed} #{classColShow}\"\n                .addClass \"#{classColExpanded} #{classColHide}\"\n            replaceClass h.th, classColHide, classColShow\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\n\n        expandShowColSubtotal = (h) ->\n            $(h.th).closest 'table.pvtTable'\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\"\n                .removeClass \"#{classColCollapsed} #{classColHide}\"\n                .addClass \"#{classColExpanded} #{classColShow}\"\n            h.th.colSpan++\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\n\n        expandChildCol = (ch, opts) ->\n            if ch.children.length isnt 0 and opts.hideOnExpand and ch.clickStatus is clickStatusExpanded\n                replaceClass ch.th, classColHide, classColShow\n            else\n                showChildCol ch\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\n                replaceClass ch.sTh, classColShow, classColHide\n            expandChildCol ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\n\n        expandCol = (axisHeaders, h, opts) ->\n            if h.clickStatus is clickStatusExpanded\n                adjustAxisHeader axisHeaders, h.col, opts\n                return\n            colSpan = 0\n            for chKey in h.children\n                ch = h[chKey]\n                expandChildCol ch, opts\n                colSpan += ch.th.colSpan\n            h.th.colSpan = colSpan\n\n            if h.col < opts.disableFrom\n                if opts.hideOnExpand\n                    expandHideColSubtotal h\n                    --colSpan\n                else\n                    expandShowColSubtotal h\n            p = h.parent\n            while p\n                p.th.colSpan += colSpan\n                p = p.parent\n            h.clickStatus = clickStatusExpanded\n            h.onClick = collapseCol\n            axisHeaders.ah[h.col].expandedCount++\n            adjustAxisHeader axisHeaders, h.col, opts\n\n        hideChildRow = (ch, opts) ->\n            replaceClass cell, classRowShow, classRowHide for cell in ch.tr.querySelectorAll \"th, td\"\n            replaceClass cell, classRowShow, classRowHide for cell in ch.sTr.querySelectorAll \"th, td\" if ch.sTr\n\n        collapseShowRowSubtotal = (h, opts) ->\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\n            for cell in h.tr.querySelectorAll \"th, td\"\n                removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\n                addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\n            if h.sTr\n                for cell in h.sTr.querySelectorAll \"th, td\"\n                    removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\n                    addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\n\n        collapseChildRow = (ch, h, opts) ->\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\n            hideChildRow ch, opts\n\n        collapseRow = (axisHeaders, h, opts) ->\n            collapseChildRow h[chKey], h, opts for chKey in h.children\n            collapseShowRowSubtotal h, opts\n            h.clickStatus = clickStatusCollapsed\n            h.onClick = expandRow\n            axisHeaders.ah[h.col].expandedCount--\n            adjustAxisHeader axisHeaders, h.col, opts\n\n        showChildRow = (ch, opts) ->\n            replaceClass cell, classRowHide, classRowShow for cell in ch.tr.querySelectorAll \"th, td\"\n            replaceClass cell, classRowHide, classRowShow for cell in ch.sTr.querySelectorAll \"th, td\" if ch.sTr\n\n        expandShowRowSubtotal = (h, opts) ->\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\n            for cell in h.tr.querySelectorAll \"th, td\"\n                removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\n                addClass cell, \"#{classRowExpanded} #{classRowShow}\"\n            if h.sTr\n                for cell in h.sTr.querySelectorAll \"th, td\"\n                    removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\n                    addClass cell, \"#{classRowExpanded} #{classRowShow}\"\n\n        expandHideRowSubtotal = (h, opts) ->\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\n            for cell in h.tr.querySelectorAll \"th, td\"\n                removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\n                addClass cell, \"#{classRowExpanded} #{classRowHide}\"\n            removeClass h.th, \"#{classRowCollapsed} #{classRowHide}\"\n            addClass cell, \"#{classRowExpanded} #{classRowShow}\"\n            if h.sTr\n                for cell in h.sTr.querySelectorAll \"th, td\"\n                    removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\n                    addClass cell, \"#{classRowExpanded} #{classRowHide}\"\n\n        expandChildRow = (ch, opts) ->\n            if ch.children.length isnt 0 and opts.hideOnExpand and ch.clickStatus is clickStatusExpanded\n                replaceClass ch.th, classRowHide, classRowShow\n            else\n                showChildRow ch, opts\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\n                replaceClass ch.sTh, classRowShow, classRowHide\n            expandChildRow ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\n\n        expandRow = (axisHeaders, h, opts) ->\n            if h.clickStatus is clickStatusExpanded\n                adjustAxisHeader axisHeaders, h.col, opts\n                return\n            for chKey in h.children\n                ch = h[chKey]\n                expandChildRow ch, opts\n            if h.children.length isnt 0\n                if opts.hideOnExpand\n                    expandHideRowSubtotal h, opts\n                else\n                    expandShowRowSubtotal h, opts\n            h.clickStatus = clickStatusExpanded\n            h.onClick = collapseRow\n            axisHeaders.ah[h.col].expandedCount++\n            adjustAxisHeader axisHeaders, h.col, opts\n\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\n            collapsible = Math.min attrs.length-2, opts.disableFrom-1\n            return if col > collapsible\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.children.length isnt 0 for i in [collapsible..col] by -1\n\n        expandAxis = (axisHeaders, col, attrs, opts) ->\n            ah = axisHeaders.ah[col]\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders for i in [0..col]\n            # when h.clickStatus is clickStatusCollapsed and h.children.length isnt 0 for i in [0..col]\n\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\n            rowAttrHeaders = []\n            colAttrHeaders = []\n\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\n\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\n\n            thead = createElement \"thead\"\n            result.appendChild thead\n\n            if colAttrs.length isnt 0\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\n                node = counter: 0\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\n\n            tbody = createElement \"tbody\"\n            result.appendChild tbody\n            if rowAttrs.length isnt 0\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\n                node = counter: 0\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\n\n            buildValues tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts\n            tr = buildColTotalsHeader rowAttrs, colAttrs\n            buildColTotals tr, colAttrHeaders, rowAttrs, colAttrs, opts if colAttrs.length > 0\n            buildGrandTotal tbody, tr, rowAttrs, colAttrs, opts\n\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts.colSubtotalDisplay\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts.rowSubtotalDisplay\n\n            result.setAttribute \"data-numrows\", rowKeys.length\n            result.setAttribute \"data-numcols\", colKeys.length\n            result.style.display = \"\"\n\n            return result\n\n        return main rowAttrs, rowKeys, colAttrs, colKeys\n\n    $.pivotUtilities.subtotal_renderers =\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\n\n    #\n    # Aggregators\n    #\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\n\n    subtotalAggregatorTemplates =\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\n            rowKey = [] if typeof rowKey is \"undefined\"\n            colKey = [] if typeof colKey is \"undefined\"\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\n            inner: wrapped(x...)(data, rowKey, colKey)\n            push: (record) -> @inner.push record\n            format: formatter\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\n            numInputs: wrapped(x...)().numInputs\n\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\n\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\n\n"]}